# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Agent

    Agent(;
        id=nothing,
        name=nothing,
        state=nothing,
    )

    - id::String
    - name::String : A human-readable name for the agent that describes its role
    - state::String : The current state of the agent
"""
Base.@kwdef mutable struct Agent <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    state::Union{Nothing, String} = nothing

    function Agent(id, name, state, )
        OpenAPI.validate_property(Agent, Symbol("id"), id)
        OpenAPI.validate_property(Agent, Symbol("name"), name)
        OpenAPI.validate_property(Agent, Symbol("state"), state)
        return new(id, name, state, )
    end
end # type Agent

const _property_types_Agent = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("name")=>"String", Symbol("state")=>"String", )
OpenAPI.property_type(::Type{ Agent }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Agent[name]))}

function check_required(o::Agent)
    o.id === nothing && (return false)
    o.name === nothing && (return false)
    o.state === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ Agent }, name::Symbol, val)



    if name === Symbol("state")
        OpenAPI.validate_param(name, "Agent", :enum, val, ["CREATED", "RUNNING", "PAUSED", "STOPPED"])
    end

end
